import java.util.Scanner;

public class Sieve_of_Eratosthenes2 {

	public static void main(String[] args) {
		boolean finished = false;
		Scanner userInputScanner = new Scanner(System.in);
		while (!finished) {
			System.out.print("Enter int >= 2 (or type 'quit' to exit): ");
			if (userInputScanner.hasNextInt()) {
				int maxNum = userInputScanner.nextInt();
				String clcLine = userInputScanner.nextLine();
				if (maxNum >= 2) {
					System.out.println(nonCrossedOutSubseqToString(sieve(maxNum)));
				} else {
					System.out.println("The number entered must be greater than or equal to 2");
				}
			} else if (userInputScanner.hasNext()) {
				String userInput = userInputScanner.next();
				String clcLine = userInputScanner.nextLine();
				if (userInput.equals("quit")) {
					finished = true;
				} else {
					System.out.println("Sorry, the input was not recognised.");
				}
			} else {
				System.out.println("You must enter a number or type 'quit' to exit.");
			}
		}
		userInputScanner.close();
		System.out.println("Goodbye...");
	}

	// Creates a boolean array of length: size + 1
	public static boolean[] createSequence(int size) {
		boolean[] sequence = new boolean[size + 1];
		for (int index = 0; index < sequence.length; index++) {
			sequence[index] = true;
		}
		return sequence;
	}

	// Crosses out higher multiples of a number.
	public static void crossOutHigherMultiples(boolean[] numArray, int number) {
		int arrayLength = numArray.length - 1;
		boolean changedState = false;
		for (int index = 2; (index * number) <= arrayLength; index++) {
			if (numArray[index * number] == true) {
				numArray[index * number] = false;
				changedState = true;
			}
		}
		if (changedState)
			System.out.println(sequenceToString(numArray, true));
	}

	// Takes a number and returns an array of 2 -> N with non-primes as false;
	public static boolean[] sieve(int maxNum) {
		boolean[] numArray = createSequence(maxNum);
		for (int index = 2; index < numArray.length - 1; index++) {
			if (numArray[index])
				crossOutHigherMultiples(numArray, index);
		}
		return numArray;
	}

	// Takes an array and returns a string of the numbers (indices).
	public static String sequenceToString(boolean[] numArray, boolean includeCrossedOut) {
		String returnString = "2";
		for (int index = 3; index < numArray.length; index++) {
			if (numArray[index]) {
				returnString += ", " + index;
			} else if (includeCrossedOut) {
				returnString += ", [" + index + "]";
			}
		}
		return returnString;
	}

	// Takes an array and returns a string of non-crossed out numbers (indices).
	public static String nonCrossedOutSubseqToString(boolean[] numArray) {
		return sequenceToString(numArray, false);
	}
}
